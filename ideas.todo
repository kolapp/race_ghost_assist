@pin
	☐ tesztelni jo mapok
		race-itlttoan2

	☐ functions are spaghetti code
	✔ file and function names are terrible @done(25-06-28 15:51)
	✘ racing line lags behind when im much faster than the ghost @cancelled(25-06-28 15:51)
	✔ dont draw racing lines below the vehicle when its flying over a jump @done(25-06-28 15:51)

	☐ mta somehow reads .ghost files from a different mta install location

	☐ ghost fix for mr green?
		☐ stick to using only local ghost files

		☐ terrible compatibility
			☐ race_ghost (vanilla) does not support local ghost files
			☐ race_ghost (mrgreen) stores local ghosts very differently

		✘ legacy support? @cancelled(25-07-07 15:33)
		✘ convert xml ghost to json @cancelled(25-07-07 15:34)
		✔ ghost names probably changed @done(25-07-07 15:34)

		[Dev] VulpyWags: The way ghosts are saved is also differnetly, so issue 1 wont' fix it
		[Dev] VulpyWags: See https://github.com/MrGreenGaming/MTA-Resources/blob/78b71e16117c49dfa83e235ad40bc2d6f84c8f47/resources/%5Brace%5D/race_ghost/playback_client.lua#L333
		[Dev] VulpyWags: That's your local Personal Best
		[Dev] VulpyWags: That ghost data should be send to  your resource
		[Dev] VulpyWags: you can use that to draw the line

		[Dev] VulpyWags: There's two methods I think can work
		[Dev] VulpyWags: Trigger an event in the PB if statement I mentioned
		[Dev] VulpyWags: Or change the way how you load the ghost file and parse the ghost file
		[Dev] VulpyWags: MTA San Andreas\mods\deathmatch\priv\E5E7F2\race_ghost\ghosts\race-racingsantos_VulpyWags_PB.ghost
		[Dev] VulpyWags: Is my local best ghost file
		[Dev] VulpyWags: Note that it's in the private folder, so each server it's different

		[Dev] VulpyWags: I think the 2nd method is more clean
		[Dev] VulpyWags: So you're not depended on the ghost resource
---

Archive:
	you need to know
		✔ where your player's car is in the race (cp progrses) @done(25-07-07 12:07)
		✘ where your ghost's car is in the race (harder ghost car harder, it doesn't collect cps) @cancelled(25-07-07 12:07)


	✔ retrieve all the x,y,z's of the cps @done(25-07-07 12:06)

	✔ search for the first node within distance of collecting cp1 @done(25-07-07 12:06)

	✘ if so then everything up until that node is part 1 @cancelled(25-07-07 12:09)
	✘ then run through your node list and search for the first node that is within distance of collecting cp2 @cancelled(25-07-07 12:09)
	✘ if so then everything up until that node is part 2 @cancelled(25-07-07 12:09)

	✔ during the race check at which cp your player's car is and retrieve all nodes from that part @done(25-07-07 12:07)
	✔ then get the node that is nearest to the player @done(25-07-07 12:07)
	✔ that way you have the right node heading for the right cp that is closest to your player @done(25-07-07 12:07)
	✔ after that you can draw as many nodes ahead as you want @done(25-07-07 12:07)

	✘ the hard part will be dividing the nodes in parts as different types of checkpoints have different types of ways of collecting them @cancelled(25-07-07 12:08)
	✘ a normal checkpoint collects if you are at the right x and y, a corona or cylinder collects if you are at the right x y and z @cancelled(25-07-07 12:08)
	✘ although some nodes might even overlap while being in the same part, heading for the same cp @cancelled(25-07-07 12:08)
	☐ imagine a race where you start at the bottom floor, drive 100km ahead and have to turn around, go up a ramp and drive 100km back to finish just above the start(edited)
		☐ that way the script will always pick the wrong node at some point, there is no way in making it good

	---

	☐ neha atter at masik utvonalra
		☐ fenn lehet egy monotonitast tartani
		☐ a nearby node-ok kozul a node_id valtozas pozitiv es minimalis legyen az elozohoz kepest
		✘ last_node -1-rol indul --> ugy nem lehet felremenni a verseny elejen @cancelled(25-07-07 12:06)
		✔ next_node id az elozonel csak nagyobb lehet @done(25-07-07 12:06)

	☐ mi van ha player megdoglik?
	☐ 1 kanyarhoz csak 1x latod az ivet